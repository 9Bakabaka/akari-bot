class MsgInfo:
    __slots__ = ["targetId", "senderId", "senderName", "targetFrom", "senderInfo", "senderFrom"]

    def __init__(self,
                 targetId: [int, str],
                 senderId: [int, str],
                 senderName: str,
                 targetFrom: str,
                 senderFrom: str
                 ): ...


class Session:
    def __init__(self, message, target, sender): ...


class MessageSession:
    __slots__ = ("target", "session", "trigger_msg", "parsed_msg",
                 "sendMessage", "waitConfirm", "checkPermission", "delete", 'asDisplay', "Typing", "Feature", "checkSuperuser")
    def __init__(self, target: MsgInfo, session: Session):...
    async def sendMessage(self, msgchain, quote=True) -> MessageSession: ...
    async def waitConfirm(self): ...
    def asDisplay(self): ...
    async def delete(self): ...
    def checkPermission(self): ...
    class Typing:
        def __init__(self, msg: MessageSession): ...
    @staticmethod
    def bind_template(cls, BotTemplate):...
    def checkSuperUser(self):...
    class Feature:
        image = ...
        voice = ...
