name: "Build Executables"

on:
  push:
    branches: [ dev/build ]
jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        arch: [X64, ARM64]

    runs-on: ${{ matrix.os }} - ${{ matrix.arch }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python X64
        if: matrix.arch == 'X64'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Setup Python ARM64
        if: matrix.arch == 'ARM64'
        uses: deadsnakes/action@v2.1.1
        with:
          python-version: '3.12' # Version range or exact version of a Python version to use, using SemVer's version range syntax

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Build Launcher Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: launcher.py
          onefile: true
          include-plugin-directory: |
            modules
            bots

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: bot.py
          onefile: true

      - name: Copy Assets
        run: |
          mkdir -p build/assets
          mkdir -p build/config
          mkdir -p build/locales
          cp -r assets/* build/assets
          cp config/config.toml build/config
          cp config/config.toml.example build/config
          cp -r locales/* build/locales
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }} Build
          path: |
            build/**
